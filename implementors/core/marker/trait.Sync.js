(function() {var implementors = {};
implementors["glsl_lang"] = [{"text":"impl Sync for Path","synthetic":true,"types":[]},{"text":"impl Sync for IdentifierData","synthetic":true,"types":[]},{"text":"impl Sync for TypeNameData","synthetic":true,"types":[]},{"text":"impl Sync for TypeSpecifierNonArray","synthetic":true,"types":[]},{"text":"impl Sync for TypeSpecifier","synthetic":true,"types":[]},{"text":"impl Sync for StructSpecifier","synthetic":true,"types":[]},{"text":"impl Sync for StructFieldSpecifier","synthetic":true,"types":[]},{"text":"impl Sync for ArrayedIdentifier","synthetic":true,"types":[]},{"text":"impl Sync for TypeQualifier","synthetic":true,"types":[]},{"text":"impl Sync for TypeQualifierSpec","synthetic":true,"types":[]},{"text":"impl Sync for StorageQualifier","synthetic":true,"types":[]},{"text":"impl Sync for LayoutQualifier","synthetic":true,"types":[]},{"text":"impl Sync for LayoutQualifierSpec","synthetic":true,"types":[]},{"text":"impl Sync for PrecisionQualifier","synthetic":true,"types":[]},{"text":"impl Sync for InterpolationQualifier","synthetic":true,"types":[]},{"text":"impl Sync for FullySpecifiedType","synthetic":true,"types":[]},{"text":"impl Sync for ArraySpecifier","synthetic":true,"types":[]},{"text":"impl Sync for ArraySpecifierDimension","synthetic":true,"types":[]},{"text":"impl Sync for DeclarationData","synthetic":true,"types":[]},{"text":"impl Sync for Block","synthetic":true,"types":[]},{"text":"impl Sync for FunIdentifier","synthetic":true,"types":[]},{"text":"impl Sync for FunctionPrototypeData","synthetic":true,"types":[]},{"text":"impl Sync for FunctionParameterDeclarationData","synthetic":true,"types":[]},{"text":"impl Sync for FunctionParameterDeclarator","synthetic":true,"types":[]},{"text":"impl Sync for InitDeclaratorList","synthetic":true,"types":[]},{"text":"impl Sync for SingleDeclaration","synthetic":true,"types":[]},{"text":"impl Sync for SingleDeclarationNoType","synthetic":true,"types":[]},{"text":"impl Sync for Initializer","synthetic":true,"types":[]},{"text":"impl Sync for Expr","synthetic":true,"types":[]},{"text":"impl Sync for UnaryOp","synthetic":true,"types":[]},{"text":"impl Sync for BinaryOp","synthetic":true,"types":[]},{"text":"impl Sync for AssignmentOp","synthetic":true,"types":[]},{"text":"impl Sync for TranslationUnit","synthetic":true,"types":[]},{"text":"impl Sync for ExternalDeclarationData","synthetic":true,"types":[]},{"text":"impl Sync for FunctionDefinitionData","synthetic":true,"types":[]},{"text":"impl Sync for CompoundStatementData","synthetic":true,"types":[]},{"text":"impl Sync for StatementData","synthetic":true,"types":[]},{"text":"impl Sync for ExprStatement","synthetic":true,"types":[]},{"text":"impl Sync for SelectionStatement","synthetic":true,"types":[]},{"text":"impl Sync for Condition","synthetic":true,"types":[]},{"text":"impl Sync for SelectionRestStatement","synthetic":true,"types":[]},{"text":"impl Sync for SwitchStatement","synthetic":true,"types":[]},{"text":"impl Sync for CaseLabel","synthetic":true,"types":[]},{"text":"impl Sync for IterationStatement","synthetic":true,"types":[]},{"text":"impl Sync for ForInitStatement","synthetic":true,"types":[]},{"text":"impl Sync for ForRestStatement","synthetic":true,"types":[]},{"text":"impl Sync for JumpStatement","synthetic":true,"types":[]},{"text":"impl Sync for PreprocessorData","synthetic":true,"types":[]},{"text":"impl Sync for PreprocessorDefine","synthetic":true,"types":[]},{"text":"impl Sync for PreprocessorElseIf","synthetic":true,"types":[]},{"text":"impl Sync for PreprocessorError","synthetic":true,"types":[]},{"text":"impl Sync for PreprocessorIf","synthetic":true,"types":[]},{"text":"impl Sync for PreprocessorIfDef","synthetic":true,"types":[]},{"text":"impl Sync for PreprocessorIfNDef","synthetic":true,"types":[]},{"text":"impl Sync for PreprocessorInclude","synthetic":true,"types":[]},{"text":"impl Sync for PreprocessorLine","synthetic":true,"types":[]},{"text":"impl Sync for PreprocessorPragma","synthetic":true,"types":[]},{"text":"impl Sync for PreprocessorUndef","synthetic":true,"types":[]},{"text":"impl Sync for PreprocessorVersion","synthetic":true,"types":[]},{"text":"impl Sync for PreprocessorVersionProfile","synthetic":true,"types":[]},{"text":"impl Sync for PreprocessorExtension","synthetic":true,"types":[]},{"text":"impl Sync for PreprocessorExtensionName","synthetic":true,"types":[]},{"text":"impl Sync for PreprocessorExtensionBehavior","synthetic":true,"types":[]},{"text":"impl Sync for CommentData","synthetic":true,"types":[]},{"text":"impl !Sync for Comments","synthetic":true,"types":[]},{"text":"impl&lt;'i&gt; !Sync for PreprocessorToken&lt;'i&gt;","synthetic":true,"types":[]},{"text":"impl Sync for PreprocessorTokenKind","synthetic":true,"types":[]},{"text":"impl&lt;'i&gt; !Sync for Token&lt;'i&gt;","synthetic":true,"types":[]},{"text":"impl Sync for TokenKind","synthetic":true,"types":[]},{"text":"impl Sync for IdentifierContext","synthetic":true,"types":[]},{"text":"impl Sync for GlslTypeTablePolicy","synthetic":true,"types":[]},{"text":"impl !Sync for TypeNames","synthetic":true,"types":[]},{"text":"impl&lt;'i&gt; !Sync for LexerStage&lt;'i&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'i&gt; !Sync for Lexer&lt;'i&gt;","synthetic":true,"types":[]},{"text":"impl Sync for LexicalError","synthetic":true,"types":[]},{"text":"impl&lt;'i&gt; !Sync for __Symbol&lt;'i&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'i&gt; Sync for __StateMachine&lt;'i&gt;","synthetic":true,"types":[]},{"text":"impl Sync for TranslationUnitParser","synthetic":true,"types":[]},{"text":"impl !Sync for ParseOptions","synthetic":true,"types":[]},{"text":"impl Sync for IndentStyle","synthetic":true,"types":[]},{"text":"impl Sync for Whitespace","synthetic":true,"types":[]},{"text":"impl Sync for FormattingSettings","synthetic":true,"types":[]},{"text":"impl&lt;'s&gt; Sync for FormattingState&lt;'s&gt;","synthetic":true,"types":[]},{"text":"impl Sync for DEFAULT_SETTINGS","synthetic":true,"types":[]},{"text":"impl Sync for Visit","synthetic":true,"types":[]}];
implementors["lang_util"] = [{"text":"impl Sync for LexerPosition","synthetic":true,"types":[]},{"text":"impl Sync for NodeSpan","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Sync for Node&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T:&nbsp;?Sized&gt; Sync for NodeDisplayWrapper&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["lang_util_derive"] = [{"text":"impl Sync for DisplayFieldOpts","synthetic":true,"types":[]},{"text":"impl Sync for DisplayVariantOpts","synthetic":true,"types":[]},{"text":"impl !Sync for NodeDisplayField","synthetic":true,"types":[]},{"text":"impl !Sync for NodeDisplayVariant","synthetic":true,"types":[]},{"text":"impl Sync for NodeDisplay","synthetic":true,"types":[]},{"text":"impl !Sync for NodeContentOpts","synthetic":true,"types":[]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()