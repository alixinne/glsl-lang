(function() {var implementors = {};
implementors["glsl_lang"] = [{"text":"impl Unpin for Path","synthetic":true,"types":[]},{"text":"impl Unpin for IdentifierData","synthetic":true,"types":[]},{"text":"impl Unpin for TypeNameData","synthetic":true,"types":[]},{"text":"impl Unpin for TypeSpecifierNonArray","synthetic":true,"types":[]},{"text":"impl Unpin for TypeSpecifier","synthetic":true,"types":[]},{"text":"impl Unpin for StructSpecifier","synthetic":true,"types":[]},{"text":"impl Unpin for StructFieldSpecifier","synthetic":true,"types":[]},{"text":"impl Unpin for ArrayedIdentifier","synthetic":true,"types":[]},{"text":"impl Unpin for TypeQualifier","synthetic":true,"types":[]},{"text":"impl Unpin for TypeQualifierSpec","synthetic":true,"types":[]},{"text":"impl Unpin for StorageQualifier","synthetic":true,"types":[]},{"text":"impl Unpin for LayoutQualifier","synthetic":true,"types":[]},{"text":"impl Unpin for LayoutQualifierSpec","synthetic":true,"types":[]},{"text":"impl Unpin for PrecisionQualifier","synthetic":true,"types":[]},{"text":"impl Unpin for InterpolationQualifier","synthetic":true,"types":[]},{"text":"impl Unpin for FullySpecifiedType","synthetic":true,"types":[]},{"text":"impl Unpin for ArraySpecifier","synthetic":true,"types":[]},{"text":"impl Unpin for ArraySpecifierDimension","synthetic":true,"types":[]},{"text":"impl Unpin for DeclarationData","synthetic":true,"types":[]},{"text":"impl Unpin for Block","synthetic":true,"types":[]},{"text":"impl Unpin for FunIdentifier","synthetic":true,"types":[]},{"text":"impl Unpin for FunctionPrototypeData","synthetic":true,"types":[]},{"text":"impl Unpin for FunctionParameterDeclarationData","synthetic":true,"types":[]},{"text":"impl Unpin for FunctionParameterDeclarator","synthetic":true,"types":[]},{"text":"impl Unpin for InitDeclaratorList","synthetic":true,"types":[]},{"text":"impl Unpin for SingleDeclaration","synthetic":true,"types":[]},{"text":"impl Unpin for SingleDeclarationNoType","synthetic":true,"types":[]},{"text":"impl Unpin for Initializer","synthetic":true,"types":[]},{"text":"impl Unpin for Expr","synthetic":true,"types":[]},{"text":"impl Unpin for UnaryOp","synthetic":true,"types":[]},{"text":"impl Unpin for BinaryOp","synthetic":true,"types":[]},{"text":"impl Unpin for AssignmentOp","synthetic":true,"types":[]},{"text":"impl Unpin for TranslationUnit","synthetic":true,"types":[]},{"text":"impl Unpin for ExternalDeclarationData","synthetic":true,"types":[]},{"text":"impl Unpin for FunctionDefinitionData","synthetic":true,"types":[]},{"text":"impl Unpin for CompoundStatementData","synthetic":true,"types":[]},{"text":"impl Unpin for StatementData","synthetic":true,"types":[]},{"text":"impl Unpin for ExprStatement","synthetic":true,"types":[]},{"text":"impl Unpin for SelectionStatement","synthetic":true,"types":[]},{"text":"impl Unpin for Condition","synthetic":true,"types":[]},{"text":"impl Unpin for SelectionRestStatement","synthetic":true,"types":[]},{"text":"impl Unpin for SwitchStatement","synthetic":true,"types":[]},{"text":"impl Unpin for CaseLabel","synthetic":true,"types":[]},{"text":"impl Unpin for IterationStatement","synthetic":true,"types":[]},{"text":"impl Unpin for ForInitStatement","synthetic":true,"types":[]},{"text":"impl Unpin for ForRestStatement","synthetic":true,"types":[]},{"text":"impl Unpin for JumpStatement","synthetic":true,"types":[]},{"text":"impl Unpin for PreprocessorData","synthetic":true,"types":[]},{"text":"impl Unpin for PreprocessorDefine","synthetic":true,"types":[]},{"text":"impl Unpin for PreprocessorElseIf","synthetic":true,"types":[]},{"text":"impl Unpin for PreprocessorError","synthetic":true,"types":[]},{"text":"impl Unpin for PreprocessorIf","synthetic":true,"types":[]},{"text":"impl Unpin for PreprocessorIfDef","synthetic":true,"types":[]},{"text":"impl Unpin for PreprocessorIfNDef","synthetic":true,"types":[]},{"text":"impl Unpin for PreprocessorInclude","synthetic":true,"types":[]},{"text":"impl Unpin for PreprocessorLine","synthetic":true,"types":[]},{"text":"impl Unpin for PreprocessorPragma","synthetic":true,"types":[]},{"text":"impl Unpin for PreprocessorUndef","synthetic":true,"types":[]},{"text":"impl Unpin for PreprocessorVersion","synthetic":true,"types":[]},{"text":"impl Unpin for PreprocessorVersionProfile","synthetic":true,"types":[]},{"text":"impl Unpin for PreprocessorExtension","synthetic":true,"types":[]},{"text":"impl Unpin for PreprocessorExtensionName","synthetic":true,"types":[]},{"text":"impl Unpin for PreprocessorExtensionBehavior","synthetic":true,"types":[]},{"text":"impl Unpin for CommentData","synthetic":true,"types":[]},{"text":"impl&lt;'i&gt; Unpin for PreprocessorToken&lt;'i&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'i&gt; Unpin for Token&lt;'i&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'i&gt; Unpin for LexerStage&lt;'i&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'i&gt; Unpin for Lexer&lt;'i&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for LexicalError","synthetic":true,"types":[]},{"text":"impl&lt;'i&gt; Unpin for __Symbol&lt;'i&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'i&gt; Unpin for __StateMachine&lt;'i&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for TranslationUnitParser","synthetic":true,"types":[]},{"text":"impl Unpin for ParseOptions","synthetic":true,"types":[]},{"text":"impl Unpin for ParseContext","synthetic":true,"types":[]},{"text":"impl Unpin for ParseContextData","synthetic":true,"types":[]},{"text":"impl Unpin for IdentifierContext","synthetic":true,"types":[]},{"text":"impl Unpin for GlslTypeTablePolicy","synthetic":true,"types":[]},{"text":"impl Unpin for IndentStyle","synthetic":true,"types":[]},{"text":"impl Unpin for Whitespace","synthetic":true,"types":[]},{"text":"impl Unpin for FormattingSettings","synthetic":true,"types":[]},{"text":"impl&lt;'s&gt; Unpin for FormattingState&lt;'s&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for DEFAULT_SETTINGS","synthetic":true,"types":[]},{"text":"impl Unpin for Visit","synthetic":true,"types":[]}];
implementors["lang_util"] = [{"text":"impl Unpin for ResolvedPosition","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Unpin for ParseError&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Unpin for ParseErrorKind&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Unpin for Node&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Unpin,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T:&nbsp;?Sized&gt; Unpin for NodeDisplayWrapper&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl Unpin for LexerPosition","synthetic":true,"types":[]},{"text":"impl Unpin for NodeSpan","synthetic":true,"types":[]}];
implementors["lang_util_derive"] = [{"text":"impl Unpin for DisplayFieldOpts","synthetic":true,"types":[]},{"text":"impl Unpin for DisplayVariantOpts","synthetic":true,"types":[]},{"text":"impl Unpin for NodeDisplayField","synthetic":true,"types":[]},{"text":"impl Unpin for NodeDisplayVariant","synthetic":true,"types":[]},{"text":"impl Unpin for NodeDisplay","synthetic":true,"types":[]},{"text":"impl Unpin for NodeContentOpts","synthetic":true,"types":[]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()