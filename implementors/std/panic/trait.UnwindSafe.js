(function() {var implementors = {};
implementors["glsl_lang"] = [{"text":"impl UnwindSafe for Path","synthetic":true,"types":[]},{"text":"impl UnwindSafe for IdentifierData","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TypeNameData","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TypeSpecifierNonArray","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TypeSpecifier","synthetic":true,"types":[]},{"text":"impl UnwindSafe for StructSpecifier","synthetic":true,"types":[]},{"text":"impl UnwindSafe for StructFieldSpecifier","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ArrayedIdentifier","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TypeQualifier","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TypeQualifierSpec","synthetic":true,"types":[]},{"text":"impl UnwindSafe for StorageQualifier","synthetic":true,"types":[]},{"text":"impl UnwindSafe for LayoutQualifier","synthetic":true,"types":[]},{"text":"impl UnwindSafe for LayoutQualifierSpec","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PrecisionQualifier","synthetic":true,"types":[]},{"text":"impl UnwindSafe for InterpolationQualifier","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FullySpecifiedType","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ArraySpecifier","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ArraySpecifierDimension","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DeclarationData","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Block","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FunIdentifier","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FunctionPrototypeData","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FunctionParameterDeclarationData","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FunctionParameterDeclarator","synthetic":true,"types":[]},{"text":"impl UnwindSafe for InitDeclaratorList","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SingleDeclaration","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SingleDeclarationNoType","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Initializer","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Expr","synthetic":true,"types":[]},{"text":"impl UnwindSafe for UnaryOp","synthetic":true,"types":[]},{"text":"impl UnwindSafe for BinaryOp","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AssignmentOp","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TranslationUnit","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExternalDeclarationData","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FunctionDefinitionData","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CompoundStatementData","synthetic":true,"types":[]},{"text":"impl UnwindSafe for StatementData","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ExprStatement","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SelectionStatement","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Condition","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SelectionRestStatement","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SwitchStatement","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CaseLabel","synthetic":true,"types":[]},{"text":"impl UnwindSafe for IterationStatement","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ForInitStatement","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ForRestStatement","synthetic":true,"types":[]},{"text":"impl UnwindSafe for JumpStatement","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PreprocessorData","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PreprocessorDefine","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PreprocessorElseIf","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PreprocessorError","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PreprocessorIf","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PreprocessorIfDef","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PreprocessorIfNDef","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PreprocessorInclude","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PreprocessorLine","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PreprocessorPragma","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PreprocessorUndef","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PreprocessorVersion","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PreprocessorVersionProfile","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PreprocessorExtension","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PreprocessorExtensionName","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PreprocessorExtensionBehavior","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CommentData","synthetic":true,"types":[]},{"text":"impl&lt;'i&gt; !UnwindSafe for PreprocessorToken&lt;'i&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PreprocessorTokenKind","synthetic":true,"types":[]},{"text":"impl&lt;'i&gt; !UnwindSafe for Token&lt;'i&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TokenKind","synthetic":true,"types":[]},{"text":"impl&lt;'i&gt; !UnwindSafe for LexerStage&lt;'i&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'i&gt; !UnwindSafe for Lexer&lt;'i&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for LexicalError","synthetic":true,"types":[]},{"text":"impl&lt;'i&gt; !UnwindSafe for __Symbol&lt;'i&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'i&gt; UnwindSafe for __StateMachine&lt;'i&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TranslationUnitParser","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ParseOptions","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for ParseContext","synthetic":true,"types":[]},{"text":"impl !UnwindSafe for ParseContextData","synthetic":true,"types":[]},{"text":"impl UnwindSafe for IdentifierContext","synthetic":true,"types":[]},{"text":"impl UnwindSafe for GlslTypeTablePolicy","synthetic":true,"types":[]},{"text":"impl UnwindSafe for IndentStyle","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Whitespace","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FormattingSettings","synthetic":true,"types":[]},{"text":"impl&lt;'s&gt; UnwindSafe for FormattingState&lt;'s&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DEFAULT_SETTINGS","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Visit","synthetic":true,"types":[]}];
implementors["lang_util"] = [{"text":"impl UnwindSafe for LexerPosition","synthetic":true,"types":[]},{"text":"impl UnwindSafe for NodeSpan","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; UnwindSafe for Node&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T:&nbsp;?Sized&gt; UnwindSafe for NodeDisplayWrapper&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["lang_util_derive"] = [{"text":"impl UnwindSafe for DisplayFieldOpts","synthetic":true,"types":[]},{"text":"impl UnwindSafe for DisplayVariantOpts","synthetic":true,"types":[]},{"text":"impl UnwindSafe for NodeDisplayField","synthetic":true,"types":[]},{"text":"impl UnwindSafe for NodeDisplayVariant","synthetic":true,"types":[]},{"text":"impl UnwindSafe for NodeDisplay","synthetic":true,"types":[]},{"text":"impl UnwindSafe for NodeContentOpts","synthetic":true,"types":[]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()